---
import {
  SiReact,
  SiTailwindcss,
  SiNextdotjs,
  SiGit,
  SiAstro,
  SiJavascript,
  SiFigma,
  SiTypescript,
  SiHtml5,
  SiVercel,
  SiNotion,
  SiPrisma,
  SiCss3,
  SiReactrouter,
  iconNameMap,
} from '@/components/Icons'
import { translations } from '@/i18n/translations'
import type { Lang } from '@/types'
import LayerIcon from '@/assets/layers.svg'

interface Props {
  lang: Lang
}

const { lang }: { lang: Lang } = Astro.props
const { skills } = translations[lang]

const techIcons = [
  SiAstro,
  SiReact,
  SiTailwindcss,
  SiJavascript,
  SiNextdotjs,
  SiFigma,
  SiHtml5,
  SiTypescript,
  SiGit,
  SiVercel,
  SiNotion,
  SiPrisma,
  SiCss3,
  SiReactrouter,
  SiAstro,
  SiReact,
  SiTailwindcss,
  SiJavascript,
  SiNextdotjs,
  SiFigma,
  SiHtml5,
  SiTypescript,
  SiGit,
  SiVercel,
  SiNotion,
  SiPrisma,
  SiCss3,
  SiReactrouter,
]
---

<section
  id="skills"
  class="5xl:mx-0.5 border-y-grey bg-lightgrey lines-pattern relative mx-[1px] my-16 overflow-hidden border-y py-16"
>
  <div class="bg-lightgrey border-t-grey flex items-center border-t pb-6">
    <h2 class="sr-only">{skills}</h2>
    <p
      class="border-grey rounded-br-xs inline-flex items-center gap-1 border border-l-0 border-t-0 px-1.5 py-0.5 text-center text-sm uppercase"
    >
      <LayerIcon class="inline-block h-4" />
      <span>Tech Stack</span>
    </p>
  </div>

  <!-- Primera fila -->
  <div
    class="tech-row-1 divide-grey/60 border-y-grey/60 bg-lightgrey flex w-max divide-x-[0.5px] border-y-[0.5px]"
  >
    {
      techIcons.map((Icon) => {
        const iconName = iconNameMap.get(Icon)
        return (
          <div class="group relative flex aspect-square h-24 w-full flex-1 cursor-default flex-col items-center justify-center gap-1 sm:h-28 md:h-36">
            <div class="text-dark absolute inset-0">
              <slot />
            </div>
            <div class="text-light absolute inset-0 flex flex-col items-center justify-center gap-2">
              <div class="bg-dark not-group-hover:animate-blink group-hover:animate-opacity absolute inset-0 opacity-0" />
              <Icon className="text-dark group-hover:text-light relative text-2xl sm:text-3xl lg:text-4xl" />
              <p class="text-dark group-hover:text-light relative px-0.5 text-center text-xs">
                {iconName}
              </p>
            </div>
          </div>
        )
      })
    }
  </div>

  <!-- Segunda fila -->
  <div
    class="tech-row-2 divide-grey/60 border-b-grey/60 bg-lightgrey flex w-max -translate-x-1/2 divide-x-[0.5px] border-b-[0.5px]"
  >
    {
      [...techIcons].reverse().map((Icon) => {
        const iconName = iconNameMap.get(Icon)
        return (
          <div class="group relative flex aspect-square h-24 w-full flex-1 cursor-default flex-col items-center justify-center gap-1 sm:h-28 md:h-36">
            <div class="text-dark absolute inset-0">
              <slot />
            </div>
            <div class="text-light absolute inset-0 flex flex-col items-center justify-center gap-2">
              <div class="bg-dark not-group-hover:animate-blink group-hover:animate-opacity absolute inset-0 opacity-0" />
              <Icon className="text-dark group-hover:text-light relative text-2xl sm:text-3xl lg:text-4xl" />
              <p class="text-dark group-hover:text-light relative px-0.5 text-center text-xs">
                {iconName}
              </p>
            </div>
          </div>
        )
      })
    }
  </div>
</section>

<!-- ðŸš€ Script GSAP -->
<script>
  import gsap from 'gsap'
  import ScrollTrigger from 'gsap/ScrollTrigger'

  gsap.registerPlugin(ScrollTrigger)

  const section = document.querySelector('#skills') as HTMLElement
  const row1 = section.querySelector('.tech-row-1') as HTMLDivElement
  const row2 = section.querySelector('.tech-row-2') as HTMLDivElement

  gsap.to(row1, {
    xPercent: -15,
    scrollTrigger: {
      trigger: section,
      start: 'center bottom',
      end: 'bottom center',
      scrub: true,
    },
  })

  gsap.to(row2, {
    xPercent: 0.2,
    scrollTrigger: {
      trigger: section,
      start: 'center bottom',
      end: 'bottom center',
      scrub: true,
    },
  })
</script>
