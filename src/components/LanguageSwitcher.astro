---
import { getRelativeLocaleUrl } from 'astro:i18n'
import USFlagIcon from '@/assets/flags/us.svg'
import ESFlagIcon from '@/assets/flags/es.svg'

const { pathname } = Astro.url
const currentLang = Astro.currentLocale || 'es'
const targetLang = currentLang === 'es' ? 'en' : 'es'
const href = getRelativeLocaleUrl(targetLang, pathname.replace(`/${currentLang}`, ''))
---

<label class="rocker rocker-small">
  <a href={href}>
    <input type="checkbox" class="hidden" checked={currentLang === 'es'} />
    <span class="switch-left h-8 w-6">
      <ESFlagIcon width={20} />
    </span>
    <span class="switch-right h-8 w-10">
      <USFlagIcon width={20} />
    </span>
  </a>
</label>

<style>
  /* Switch starts here */
  .rocker {
    display: inline-block;
    position: relative;
    font-size: 2em;
    font-weight: bold;
    text-align: center;
    text-transform: uppercase;
    width: 7em;
    height: 4em;
    overflow: hidden;
    border-bottom: 0.5em solid #efefef;
  }

  .rocker-small {
    font-size: 0.75em;
    margin: 1em;
  }

  .rocker::before {
    content: '';
    position: absolute;
    top: 0.5em;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #999;
    border: 0.5em solid #efefef;
    border-bottom: 0;
  }

  .switch-left,
  .switch-right {
    cursor: pointer;
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    height: 2.5em;
    width: 3em;
    transition: 0.2s;
    user-select: none;
  }

  .switch-left {
    height: 2.4em;
    width: 2.75em;
    left: 0.85em;
    bottom: 0.4em;
    background-color: #ddd;
    transform: rotate(15deg) skewX(15deg);
  }

  .switch-right {
    right: 0.5em;
    bottom: 0;
    background-color: var(--color-green-400);
  }

  .switch-left::before,
  .switch-right::before {
    content: '';
    position: absolute;
    width: 0.4em;
    height: 2.45em;
    bottom: -0.45em;
    background-color: #ccc;
    transform: skewY(-65deg);
  }

  .switch-left::before {
    left: -0.4em;
  }

  .switch-right::before {
    right: -0.375em;
    background-color: transparent;
    transform: skewY(65deg);
  }

  input:checked + .switch-left {
    bottom: 0px;
    left: 0.5em;
    height: 2.5em;
    width: 3em;
    background-color: var(--color-green-400);
    transform: rotate(0deg) skewX(0deg);
  }

  input:checked + .switch-left::before {
    background-color: transparent;
    width: 3.0833em;
  }

  input:checked + .switch-left + .switch-right {
    background-color: #ddd;
    bottom: 0.4em;
    right: 0.8em;
    height: 2.4em;
    width: 2.75em;
    transform: rotate(-15deg) skewX(-15deg);
  }

  input:checked + .switch-left + .switch-right::before {
    background-color: #ccc;
  }

  /* Keyboard Users */
  input:focus + .switch-left {
    color: #333;
  }

  input:checked:focus + .switch-left {
    color: #fff;
  }

  input:focus + .switch-left + .switch-right {
    color: #fff;
  }

  input:checked:focus + .switch-left + .switch-right {
    color: #333;
  }
</style>
